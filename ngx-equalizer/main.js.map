{"version":3,"sources":["webpack:///./dist/ngx-equalizer/fesm5/ngx-equalizer.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;;AAE3G;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,qDAAqD,EAAE;AACtF;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,gEAAgE,EAAE;AACjG;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,iEAAiE,EAAE;AAClG;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,iCAAiC,EAAE,uCAAuC,EAAE;AACtG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,OAAO,6DAAe,6BAA6B,OAAO,wDAAU,EAAE,IAAI;AAC9F,0BAA0B,OAAO,0DAAY,4BAA4B;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","file":"main.js","sourcesContent":["import { Injectable, Directive, ContentChildren, ElementRef, HostListener, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar EqualizerService = /** @class */ (function () {\n    function EqualizerService() {\n    }\n    /**\n     * Equalize the height of the specified elementRefs\n     */\n    /**\n     * Equalize the height of the specified elementRefs\n     * @param {?} elementRefs\n     * @return {?}\n     */\n    EqualizerService.prototype.equalizeElements = /**\n     * Equalize the height of the specified elementRefs\n     * @param {?} elementRefs\n     * @return {?}\n     */\n    function (elementRefs) {\n        // Reset the height styles\n        elementRefs.forEach((/**\n         * @param {?} elementRef\n         * @return {?}\n         */\n        function (elementRef) { return elementRef.nativeElement.style.height = null; }));\n        // Retrieve the max height\n        /** @type {?} */\n        var maxHeight = elementRefs\n            .map((/**\n         * @param {?} elementRef\n         * @return {?}\n         */\n        function (elementRef) { return elementRef.nativeElement.getBoundingClientRect().height; }))\n            .reduce((/**\n         * @param {?} prev\n         * @param {?} curr\n         * @return {?}\n         */\n        function (prev, curr) {\n            return curr > prev ? curr : prev;\n        }), 0);\n        // Set the max height to all elements\n        elementRefs.forEach((/**\n         * @param {?} elementRef\n         * @return {?}\n         */\n        function (elementRef) { return elementRef.nativeElement.style.height = maxHeight + \"px\"; }));\n    };\n    EqualizerService.decorators = [\n        { type: Injectable }\n    ];\n    return EqualizerService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar EqualizeDirective = /** @class */ (function () {\n    function EqualizeDirective() {\n    }\n    EqualizeDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[equalize]',\n                },] }\n    ];\n    return EqualizeDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar EqualizerDirective = /** @class */ (function () {\n    function EqualizerDirective(equalizerService) {\n        this.equalizerService = equalizerService;\n    }\n    /**\n     * @return {?}\n     */\n    EqualizerDirective.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        this.equalize();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    EqualizerDirective.prototype.onWindowResize = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.children.map((/**\n         * @param {?} child\n         * @return {?}\n         */\n        function (child) { return console.log(((/** @type {?} */ (child.nativeElement))).innerHTML); }));\n        this.equalize();\n    };\n    /**\n     * @return {?}\n     */\n    EqualizerDirective.prototype.equalize = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.children) {\n            return;\n        }\n        this.equalizerService.equalizeElements(this.children.toArray());\n    };\n    EqualizerDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[equalizer]',\n                },] }\n    ];\n    /** @nocollapse */\n    EqualizerDirective.ctorParameters = function () { return [\n        { type: EqualizerService }\n    ]; };\n    EqualizerDirective.propDecorators = {\n        children: [{ type: ContentChildren, args: [EqualizeDirective, { read: ElementRef },] }],\n        onWindowResize: [{ type: HostListener, args: ['window:resize',] }]\n    };\n    return EqualizerDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxEqualizerModule = /** @class */ (function () {\n    function NgxEqualizerModule() {\n    }\n    NgxEqualizerModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        EqualizerDirective,\n                        EqualizeDirective\n                    ],\n                    imports: [],\n                    exports: [\n                        EqualizerDirective,\n                        EqualizeDirective\n                    ],\n                    providers: [\n                        EqualizerService\n                    ]\n                },] }\n    ];\n    return NgxEqualizerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { EqualizerService, EqualizeDirective, EqualizerDirective, NgxEqualizerModule };\n\n//# sourceMappingURL=ngx-equalizer.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n\\n  <header>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"jumbotron mt-2\\\">\\n          <h1 class=\\\"display-4\\\">ngx-equalize</h1>\\n          <p class=\\\"lead\\\">\\n            This library is inspired from <a href=\\\"https://github.com/skrajewski/Equalizer\\\" target=\\\"_blank\\\">equalizer</a> jQuery library to keep HTML elements with equal height.<br/>\\n            The library is compatible with Angular 4+ because of its low peer dependencies.\\n          </p>\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-auto\\\">\\n              <a class=\\\"github-button\\\" href=\\\"https://github.com/Raphy/ngx-equalizer\\\" data-size=\\\"large\\\" data-show-count=\\\"true\\\" aria-label=\\\"Star Raphy/ngx-equalizer on GitHub\\\" target=\\\"_blank\\\">Star</a>\\n            </div>\\n            <div class=\\\"col-auto\\\">\\n              <a class=\\\"github-button\\\" href=\\\"https://github.com/Raphy/ngx-equalizer/fork\\\" data-size=\\\"large\\\" aria-label=\\\"Fork Raphy/ngx-equalizer on GitHub\\\" target=\\\"_blank\\\">Fork</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n\\n  <div class=\\\"row mb-4\\\">\\n    <div class=\\\"col\\\">\\n      <h2>Basic usage</h2>\\n\\n      <p>The provided directives will do the job !</p>\\n\\n      <ngb-tabset equalizer>\\n        <ngb-tab title=\\\"Preview\\\">\\n          <ng-template ngbTabContent>\\n            <div class=\\\"row equalizer\\\" equalizer>\\n              <div class=\\\"col equalize\\\" equalize>\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras ornare bibendum magna at consequat. Morbi ultrices, augue eget condimentum commodo, lacus odio sodales odio, non suscipit libero enim nec odio.\\n              </div>\\n              <div class=\\\"col equalize\\\" equalize>\\n                Sed lorem elit, bibendum sed varius in, pretium vitae ipsum.<br/>Curabitur vulputate mi risus, vitae pulvinar est egestas quis. Phasellus porta lacus eget velit condimentum, ac iaculis lacus volutpat.\\n              </div>\\n              <div class=\\\"col equalize\\\" equalize>\\n                Donec quam felis, vulputate non egestas facilisis, sagittis ac odio. Aliquam tincidunt, enim commodo congue volutpat, libero erat tempus massa, eu vehicula risus eros in metus. Etiam convallis, neque quis pellentesque sodales, metus leo gravida magna, dictum ullamcorper metus lectus eget erat. Vestibulum in leo a urna lacinia dapibus a at lacus.\\n              </div>\\n            </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.module.ts\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.basic['app.module.ts'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.ts\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.basic['app.component.ts'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.html\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.basic['app.component.html'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.scss\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.basic['app.component.scss'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n      </ngb-tabset>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2>Using service</h2>\\n\\n      <p>The service will only equalize once and if the DOM change, you have to equalize again.</p>\\n\\n      <ngb-tabset equalizer>\\n        <ngb-tab title=\\\"Preview\\\">\\n          <ng-template ngbTabContent>\\n            <div class=\\\"row equalizer\\\">\\n              <div #paragraph1 class=\\\"col equalize\\\">\\n                Vivamus at orci sed nibh bibendum ultrices a a odio. Nullam pretium dolor massa, eu pretium enim ornare et. Sed et lorem eu massa iaculis sodales. Nulla gravida sapien ac ex mattis, sed accumsan ex egestas.\\n              </div>\\n              <div #paragraph2 class=\\\"col equalize\\\">\\n                Duis nisl dui, dapibus quis volutpat eget, tincidunt quis augue. Maecenas vulputate vitae lorem nec rhoncus. Etiam aliquet, arcu eget tristique eleifend, augue magna pharetra nunc, a volutpat mi enim at velit. Etiam quis suscipit risus, vel gravida eros. Nam consequat vehicula lacus, ac tristique mi lacinia id.\\n              </div>\\n              <div #paragraph3 class=\\\"col equalize\\\">\\n                Maecenas mollis hendrerit mi, facilisis consequat enim venenatis ac.\\n              </div>\\n            </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.module.ts\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.service['app.module.ts'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.ts\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.service['app.component.ts'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.html\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.service['app.component.html'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"app.component.scss\\\">\\n          <ng-template ngbTabContent>\\n            <pre equalize><code>{{ snippets.service['app.component.scss'] }}</code></pre>\\n          </ng-template>\\n        </ngb-tab>\\n      </ngb-tabset>\\n    </div>\\n  </div>\\n\\n  <footer class=\\\"mt-4\\\">\\n    <p class=\\\"text-center\\\">\\n      Made with ♥ by <a href=\\\"https://github.com/Raphy\\\" target=\\\"_blank\\\">Raphy</a><br/>\\n    </p>\\n  </footer>\\n\\n</div>\\n\\n\"","module.exports = \".equalizer {\\n  border: 2px solid #fffa00; }\\n  .equalizer .equalize {\\n    border: 1px solid #ff07ec; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JhcGh5L0RldmVsb3BtZW50L1JhcGh5L25neC1lcXVhbGl6ZXIvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUIsRUFBQTtFQUQzQjtJQUlJLHlCQUF5QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVxdWFsaXplciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmZmZhMDA7XG5cbiAgLmVxdWFsaXplIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmYwN2VjO1xuICB9XG59XG4iXX0= */\"","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { EqualizerService } from 'ngx-equalizer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('paragraph1', {read: ElementRef})\n  paragraph1: ElementRef;\n\n  @ViewChild('paragraph2', {read: ElementRef})\n  paragraph2: ElementRef;\n\n  @ViewChild('paragraph3', {read: ElementRef})\n  paragraph3: ElementRef;\n\n  snippets = {\n    basic: {\n      'app.module.ts': `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxEqualizerModule } from 'ngx-equalizer';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxEqualizerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}`,\n      'app.component.ts': `import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}`,\n      'app.component.html': `<div class=\"row equalizer\" equalizer>\n  <div class=\"col equalize\" equalize>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras ornare bibendum magna at consequat.\n    Morbi ultrices, augue eget condimentum commodo, lacus odio sodales odio, non suscipit libero enim nec odio.\n  </div>\n  <div class=\"col equalize\" equalize>\n    Sed lorem elit, bibendum sed varius in, pretium vitae ipsum.<br/>Curabitur vulputate mi risus, vitae pulvinar est egestas quis.\n    Phasellus porta lacus eget velit condimentum, ac iaculis lacus volutpat.\n  </div>\n  <div class=\"col equalize\" equalize>\n    Donec quam felis, vulputate non egestas facilisis, sagittis ac odio.\n    Aliquam tincidunt, enim commodo congue volutpat, libero erat tempus massa, eu vehicula risus eros in metus.\n    Etiam convallis, neque quis pellentesque sodales, metus leo gravida magna, dictum ullamcorper metus lectus eget erat.\n    Vestibulum in leo a urna lacinia dapibus a at lacus.\n  </div>\n</div>`,\n      'app.component.scss': `.equalizer {\n  border: 2px solid #fffa00;\n\n  .equalize {\n    border: 1px solid #ff07ec;\n  }\n}`\n    },\n    service: {\n      'app.module.ts': `import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxEqualizerModule } from 'ngx-equalizer';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxEqualizerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}`,\n      'app.component.ts': `import { AfterViewInit, Component } from '@angular/core';\nimport { EqualizerService } from 'ngx-equalizer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('paragraph1', {read: ElementRef})\n  paragraph1: ElementRef;\n\n  @ViewChild('paragraph2', {read: ElementRef})\n  paragraph2: ElementRef;\n\n  @ViewChild('paragraph3', {read: ElementRef})\n  paragraph3: ElementRef;\n\n  constructo(private readonly equalizerService: EqualizerService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.equalizerService.equalizeElements([\n      this.paragraph1,\n      this.paragraph2,\n      this.paragraph3,\n    ]);\n  }\n}`,\n      'app.component.html': `<div class=\"row equalizer\">\n  <div #paragraph1 class=\"col equalize\">\n    Vivamus at orci sed nibh bibendum ultrices a a odio. Nullam pretium dolor massa, eu pretium enim ornare et.\n    Sed et lorem eu massa iaculis sodales. Nulla gravida sapien ac ex mattis, sed accumsan ex egestas.\n  </div>\n  <div #paragraph2 class=\"col equalize\">\n    Duis nisl dui, dapibus quis volutpat eget, tincidunt quis augue. Maecenas vulputate vitae lorem nec rhoncus.\n    Etiam aliquet, arcu eget tristique eleifend, augue magna pharetra nunc, a volutpat mi enim at velit.\n    Etiam quis suscipit risus, vel gravida eros. Nam consequat vehicula lacus, ac tristique mi lacinia id.\n  </div>\n  <div #paragraph3 class=\"col equalize\">\n    Maecenas mollis hendrerit mi, facilisis consequat enim venenatis ac.\n  </div>\n</div>`,\n      'app.component.scss': `.equalizer {\n  border: 2px solid #fffa00;\n\n  .equalize {\n    border: 1px solid #ff07ec;\n  }\n}`\n    }\n  };\n\n  constructor(\n    private readonly equalizerService: EqualizerService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    this.equalizerService.equalizeElements([\n      this.paragraph1,\n      this.paragraph2,\n      this.paragraph3,\n    ]);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxEqualizerModule } from 'ngx-equalizer';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxEqualizerModule,\n    NgbTabsetModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}